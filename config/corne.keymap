/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 19 20 21 22 30 31 32 33 34 34 11 35 18 23>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <175>;
            tapping-term-ms = <200>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
        };

        rtr: right_thumb_row {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_THUMB_ROW";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        ltr: left_thumb_row {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_THUMB_ROW";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };

        layer_switch: layer_switch {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_SWITCH";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
        };

        sq_undr: sq_undr {
            compatible = "zmk,behavior-mod-morph";
            label = "SQ_UNDR";
            bindings = <&kp SQT>, <&kp UNDER>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };
    };

    macros {
        dbl_col: DOUBLE_COLON {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "::";
        };

        up_dir: UP_DIRECTORY {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp FSLH>;
            label = "up directory";
        };

        select_word: select_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT_ARROW) &kp LG(LS(RIGHT))>;
            label = "SELECT_WORD";
        };

        select_line: select_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "SELECT_LINE";
        };

        next_window: next_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(TAB)>;
            label = "NEXT_WINDOW";
        };

        previous_window: previous_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(TAB))>;
            label = "PREVIOUS_WINDOW";
        };

        next_tab: next_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(RIGHT_BRACKET))>;
            label = "NEXT_TAB";
        };

        previous_tab: previous_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(LEFT_BRACE))>;
            label = "PREVIOUS_TAB";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp B  &kp L            &kp D         &kp W              &kp Z                        &sq_undr      &kp F             &kp O       &kp U    &kp J     &kp BSLH
&none      &kp N  &hml LEFT_GUI R  &hml LCTRL T  &hml LEFT_SHIFT S  &hml LC(LA(LEFT_SHIFT)) G    &kp Y         &kp H             &kp A       &kp E    &kp I     &none
&kp LSHFT  &kp Q  &kp X            &kp M         &hml LEFT_ALT C    &kp V                        &kp K         &hmr RIGHT_ALT P  &kp PERIOD  &kp DOT  &kp FSLH  &kp RSHFT
                                   &ltr 0 ESC    &ltr 2 SPACE       &ltr 1 TAB                   &rtr 1 ENTER  &rtr 0 BACKSPACE  &rtr 0 DEL
            >;

            label = "Base";
        };

        symbol {
            bindings = <
&trans  &kp SQT          &kp LT     &kp GT     &kp DOUBLE_QUOTES  &kp PERIOD    &kp AMPS   &dbl_col    &kp LBKT  &kp RBKT               &kp PRCNT    &trans
&trans  &kp EXCLAMATION  &kp MINUS  &kp PLUS   &kp EQUAL          &kp HASH      &kp PIPE   &kp COLON   &kp LPAR  &kp RIGHT_PARENTHESIS  &kp QMARK    &trans
&trans  &kp CARET        &kp SLASH  &kp ASTRK  &kp BACKSLASH      &up_dir       &kp TILDE  &kp DOLLAR  &kp LBRC  &kp RBRC               &kp AT_SIGN  &trans
                                    &trans     &trans             &trans        &trans     &trans      &trans
            >;

            label = "Symbol";
        };

        number {
            bindings = <
&none  &none  &none  &none  &none  &none     &kp EQUAL     &kp N7  &kp N8   &kp N9  &none      &none
&none  &none  &none  &none  &none  &none     &kp FSLH      &kp N4  &kp N5   &kp N6  &kp SPACE  &none
&none  &none  &none  &none  &none  &none     &kp ASTERISK  &kp N1  &kp N2   &kp N3  &kp PLUS   &none
                     &none  &none  &tog 2    &to 2         &kp N0  &kp DOT
            >;

            label = "Number";
        };
    };
};
